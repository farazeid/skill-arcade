name: Backend PR

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - "backend/**"

permissions:
  contents: "read"
  id-token: "write"
  pull-requests: "write"
  checks: "write"

jobs:
  preview:
    if: ${{ github.event.action != 'closed' && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Configure Docker
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t "europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/skill-arcade/backend:pr-${{ github.event.pull_request.number }}" .
          docker push "europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/skill-arcade/backend:pr-${{ github.event.pull_request.number }}"
        working-directory: ./backend

      - name: Deploy to Cloud Run for Preview
        id: deploy
        run: |
          gcloud run deploy skill-arcade-backend-pr-${{ github.event.pull_request.number }} \
            --image="europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/skill-arcade/backend:pr-${{ github.event.pull_request.number }}" \
            --region=europe-west2 \
            --platform=managed \
            --allow-unauthenticated \
            --min-instances=0 \
            --port=8000 \
            --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Get Cloud Run Service URL
        id: url
        run: |
          URL=$(gcloud run services describe skill-arcade-backend-pr-${{ github.event.pull_request.number }} --platform managed --region europe-west2 --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Transform URL for WebSocket
        id: ws_url
        run: |
          URL=${{ steps.url.outputs.url }}
          WS_URL="wss://${URL#https://}/ws"
          echo "url=$WS_URL" >> $GITHUB_OUTPUT

      - name: Install Dependencies and Build in Frontend
        run: npm ci && npm run build
        env:
          VITE_WS_URL: ${{ steps.ws_url.outputs.url }}
        working-directory: ./frontend

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SKILL_ARCADE_D2194 }}
          channelId: preview-pr-${{ github.event.pull_request.number }}
          projectId: skill-arcade-d2194
          entryPoint: ./frontend

  cleanup:
    if: ${{ github.event.action == 'closed' && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Delete Cloud Run Service
        run: |
          gcloud run services delete skill-arcade-backend-pr-${{ github.event.pull_request.number }} \
            --platform=managed \
            --region=europe-west2 \
            --quiet \
            --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Delete Docker Image from Artifact Registry
        run: |
          gcloud artifacts docker images delete \
            europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/skill-arcade/backend:pr-${{ github.event.pull_request.number }} \
            --delete-tags \
            --quiet
