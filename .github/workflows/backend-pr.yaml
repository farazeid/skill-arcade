name: Deploy Backend to Google Cloud on Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - "backend/**"

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build_and_preview:
    if: ${{ github.event.action != 'closed' && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Set up Google Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          export IMAGE_NAME="${{ secrets.GCP_REPO }}/${{ secrets.GCP_PROJECT_ID }}/skill-arcade-backend:pr-${{ github.event.pull_request.number }}"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
        working-directory: ./backend

      - name: Deploy to Cloud Run for Preview
        id: deploy
        run: |
          gcloud run deploy skill-arcade-backend-pr-${{ github.event.pull_request.number }} \
            --image=$IMAGE_NAME \
            --region=${{ secrets.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --min-instances=0 \
            --port=8000 \
            --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Get Cloud Run Service URL
        id: url
        run: |
          URL=$(gcloud run services describe skill-arcade-backend-pr-${{ github.event.pull_request.number }} --platform managed --region ${{ secrets.GCP_REGION }} --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Post Preview URL to Pull Request
        # This uses the official GitHub CLI to post a comment on the PR.
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Backend preview deployed at: ${{ steps.url.outputs.url }}`
            })

  cleanup_preview:
    # This job only runs when the PR is closed.
    if: ${{ github.event.action == 'closed' && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Set up Google Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Delete Cloud Run Service
        # Deletes the temporary Cloud Run service associated with the closed PR.
        run: |
          gcloud run services delete skill-arcade-backend-pr-${{ github.event.pull_request.number }} \
            --platform=managed \
            --region=${{ secrets.GCP_REGION }} \
            --quiet \
            --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Delete Docker Image from Artifact Registry
        # Deletes the container image created for the PR.
        run: |
          gcloud artifacts docker images delete \
            ${{ secrets.GCP_REPO }}/${{ secrets.GCP_PROJECT_ID }}/skill-arcade-backend:pr-${{ github.event.pull_request.number }} \
            --delete-tags \
            --quiet \
            --project=${{ secrets.GCP_PROJECT_ID }}
